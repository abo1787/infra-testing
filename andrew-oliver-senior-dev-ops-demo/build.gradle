plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.flywaydb.flyway' version '6.1.0'
}

group = 'com.cardinal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

def postgres_host = System.getenv("POSTGRES_HOST") == null ? "localhost" : System.getenv("POSTGRES_HOST")
def postgres_user = System.getenv("POSTGRES_USER") == null ? "postgres" : System.getenv("POSTGRES_USER")
def postgres_password = System.getenv("POSTGRES_PASSWORD") == null ? "" : System.getenv("POSTGRES_PASSWORD")
def postgres_db = System.getenv("POSTGRES_DB") == null ? "postgres" : System.getenv("POSTGRES_DB")

flyway {
    url = "jdbc:postgresql://${postgres_host}:5432/${postgres_db}"
    user = "${postgres_user}"
    password = "${postgres_password}"
    schemas = ['parts']
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

    runtimeOnly 'org.postgresql:postgresql'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
        showStackTraces = true
    }
}

jacoco {
    toolVersion = "0.8.7"
}

tasks.withType(Test) {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}
